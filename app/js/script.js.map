{"version":3,"sources":["script.js"],"names":[],"mappings":"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","file":"script.js","sourcesContent":["'use strict';\n\n(function () {\n\tvar startButton = document.getElementById('start');\n\tstartButton.addEventListener('click', start);\n\tvar stopButton = document.getElementById('stop');\n\tstopButton.addEventListener('click', stop);\n\t// adding the event for key press\n\tdocument.addEventListener('keydown', changeDirection);\n\tgenMatrix();\n})();\n\nvar play = true,\n    DIR = { left: -1, down: 0, right: 1 },\n\n// directions\nxAxis = { back: 1, default: 0 },\n\n// values for verical movement\nintervalTime = 800,\n\n// the period of time for an interval function call\n\nblock,\n\n// the current moving block\nmovingBlock,\n\n// for the repositioning the block after a certain time interval\n\n// used to trace the block, (using indexes to identify the right position easier)\nstartingRow = 1,\n    startingColl = 6,\n    currentRow = 1,\n    currentColl = 6,\n    lastRow = 1,\n    lastColl = 6,\n    nextRow = 2,\n    nextColl = 6,\n\n\n// positions in the matrix\nlastX = 6,\n    lastY = 1,\n    startingPoz = document.getElementsByClassName('coll-' + startingColl)[0],\n\n// this is a column in the first row of the table\nlastPoz,\n\n// the last position of the moving block\nnextAvailableCell,\n\n// the next available cell for the moving block\nlastOccupiedCell,\n\n// the last occupied cell for the moving block\n// global vars\nmaxRow = 15,\n    maxColl = 10,\n    minColl = 1,\n    matrix = [],\n\n\n// colors for the blocks background\ncolors = ['#be0000', '#becf00', '#2cbe00', '#001ebe', '#be009a']; // the colors of the moving block\n\nfunction genMatrix() {\n\tvar i, j;\n\tfor (i = 1; i <= maxRow; i++) {\n\t\tmatrix[i] = [];\n\t\tfor (j = 1; j <= maxColl; j++) {\n\t\t\tmatrix[i][j] = 0;\n\t\t}\n\t}\n}\n\nfunction start() {\n\tplay = true;\n\tif (matrix.length === 0) {\n\t\tgenMatrix();\n\t}\n\tcheckForFullRow();\n\tblock = generateBlock();\n\tmovingBlock = setInterval(reposition, intervalTime);\n}\n\nfunction stop() {\n\tplay = false;\n\tlastY += 1;\n\tdeleteLastPosition();\n\talert(\"Game stoped!\");\n}\n\n/*\n\tThe function creates a block, and sets a color to the block before appending\n\tit to the starting position of the board\n*/\nfunction generateBlock() {\n\tblockGen = document.createElement('div');\n\tblockGen.className = 'active-block';\n\tblockGen.style.background = generateBackgroundColor();\n\tstartingPoz.appendChild(blockGen);\n\tnextAvailableCell = getnextAvailableCell(DIR.down, xAxis.default);\n\n\tsetThePositions(startingRow, startingColl, startingRow, startingColl);\n\n\treturn blockGen;\n}\n\n/*\n\tthe function starts when a key is pressed and it directs a particular event to a coresponding case\n*/\nfunction changeDirection(event) {\n\tevent = event || window.event;\n\t//clearInterval(movingBlock);\n\tif (event.keyCode == '37') {\n\t\t// left arrow\n\t\tif (verifyVacancy(DIR.left, xAxis.back)) {\n\t\t\ttry {\n\t\t\t\tmoveTo(block, DIR.left, xAxis.back);\n\t\t\t\tsetThePositions(currentRow, currentColl, nextRow - xAxis.back, nextColl + DIR.left, nextRow, nextColl + DIR.left);\n\t\t\t} catch (err) {\n\t\t\t\tconsole.log(err);\n\t\t\t}\n\t\t\tdeleteLastPosition();\n\t\t}\n\t} else if (event.keyCode == '39') {\n\t\t// right arrow\n\t\tif (verifyVacancy(DIR.right, xAxis.back)) {\n\t\t\ttry {\n\t\t\t\tmoveTo(block, DIR.right, xAxis.back);\n\t\t\t\tsetThePositions(currentRow, currentColl, nextRow - xAxis.back, nextColl + DIR.right, nextRow, nextColl + DIR.right);\n\t\t\t} catch (err) {\n\t\t\t\tconsole.log(err);\n\t\t\t}\n\t\t\tdeleteLastPosition();\n\t\t}\n\t} else if (event.keyCode == '40') {\n\t\t// down arrow\n\t\tif (verifyVacancy(DIR.down, xAxis.default)) {\n\t\t\ttry {\n\t\t\t\tmoveTo(block, DIR.down, xAxis.default);\n\t\t\t\tsetThePositions(currentRow, currentColl, nextRow - xAxis.default, nextColl + DIR.down);\n\t\t\t} catch (err) {\n\t\t\t\tconsole.log(err);\n\t\t\t}\n\t\t\tdeleteLastPosition();\n\t\t}\n\t}\n}\n/*\n\tif there is an available position next the function will reposition the block,\n\totherwise it will clear the last position and create a new block from the beginning\n*/\nfunction reposition() {\n\n\tif (play && isGameOver() === true) {\n\t\tif (verifyVacancy(DIR.down, xAxis.default)) {\n\t\t\ttry {\n\t\t\t\tmoveTo(block, DIR.down, xAxis.default);\n\t\t\t\tsetThePositions(currentRow, currentColl, nextRow - xAxis.default, nextColl + DIR.down);\n\t\t\t} catch (err) {\n\t\t\t\tconsole.log(err);\n\t\t\t}\n\t\t\tdeleteLastPosition();\n\t\t} else {\n\t\t\tblock.className = 'positioned-block';\n\t\t\tmatrix[currentRow][currentColl] = 1;\n\t\t\tresetPositions();\n\t\t\tclearInterval(movingBlock);\n\t\t\tstart();\n\t\t}\n\t} else {\n\t\tclearInterval(movingBlock);\n\t\tplay = true;\n\t}\n}\n\n// verify if the next position in a certain direction is open\nfunction verifyVacancy(direction, goBack) {\n\tif (currentRow < maxRow && currentColl + direction >= minColl && currentColl + direction <= maxColl) {\n\t\tif (isPositionOpen(direction, goBack)) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n/*\n moves the element to a specified direction\n @currentBlock - the last elment genereted.\n @direction - specifies the direction of the block\n @goBack - specifies the number of rows rows to which a block is set back\n*/\nfunction moveTo(currentBlock, direction, goBack) {\n\tif (typeof currentBlock === 'undefined' || currentBlock === null) {\n\t\tthrow new Error(\"Block is not defined!\");\n\t}\n\tif (typeof direction === 'undefined' || direction === null) {\n\t\tthrow new Error(\"The direction isn't specified!\");\n\t}\n\tif (typeof goBack === 'undefined' || goBack === null) {\n\t\tgoBack = 0;\n\t}\n\tvar newBlock = document.createElement('div');\n\tnewBlock.className = 'active-block';\n\tnewBlock.style.background = block.style.background;\n\n\t// set a trace in the matrix\n\tmatrix[currentRow][currentColl] = 2;\n\tlastX = currentColl;\n\tlastY = currentRow;\n\tnextAvailableCell = getnextAvailableCell(direction, goBack);\n\t//lastOccupiedCell = getnextAvailableCell(direction, goBack);\n\n\tnextAvailableCell.appendChild(newBlock);\n}\n\n// this function removes the first child element from a specified position of the table.\n// used to delete the last position of the block.\nfunction deleteLastPosition() {\n\t//delete the trace of the block in the matrix\n\tmatrix[lastY][lastX] = 0;\n\tvar parent = document.getElementsByClassName('coll-' + lastX)[lastY - 1];\n\tparent.removeChild(parent.children[0]);\n}\n/*\n \tfunction checks if a targeted position is empty\n \t@direction - specifies the direction of the block\n \t@goBack - specifies if the block should go back one row\n*/\nfunction isPositionOpen(direction, goBack) {\n\tif (matrix[nextRow][nextColl + direction] === 0) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n/* setting the global variables for the blocks position*/\nfunction setThePositions(currentR, currentC, nextR, nextC, incrNextRow, incrNextColl) {\n\tif (currentR && currentC && currentR !== null && currentC !== null) {\n\t\tlastRow = currentR;\n\t\tlastColl = currentC;\n\t}\n\tif (nextR && nextC && nextR !== null && nextC !== null) {\n\t\tcurrentRow = nextR;\n\t\tcurrentColl = nextC;\n\t}\n\tif (incrNextRow && incrNextColl && incrNextRow !== null && incrNextColl !== null) {\n\t\tnextRow = incrNextRow;\n\t\tnextColl = incrNextColl;\n\t} else {\n\t\tnextRow = currentRow + 1;\n\t\tnextColl = currentColl;\n\t}\n}\n\n/*\n  returns an td element which represents the next position\n  @direction - specifies the direction of the block\n  @goBack - specifies if the block should go back one row\n*/\nfunction getnextAvailableCell(direction, goBack) {\n\tif (typeof direction === 'undefined' || direction === null) {\n\t\tdirection = 0;\n\t}\n\tif (typeof goBack === 'undefined' || goBack === null) {\n\t\tgoBack = 0;\n\t}\n\treturn document.getElementsByClassName('coll-' + (nextColl + direction))[nextRow - goBack - 1];\n}\n\n/*\n  generate a index which will point to a specific position in an array with hex colors as strings\n*/\nfunction generateBackgroundColor() {\n\tvar color,\n\t    randNr = randomNumber(0, 4);\n\tcolor = colors[randNr];\n\treturn color;\n}\n\n/* resets the positions to the initial values */\nfunction resetPositions() {\n\tcurrentRow = startingRow;\n\tcurrentColl = startingColl;\n\tlastRow = startingRow;\n\tlastColl = startingColl;\n\tnextRow = startingRow + 1;\n\tnextColl = startingColl;\n}\n\n// the function checks if the game is over\nfunction isGameOver() {\n\tfor (var i = minColl; i <= maxColl; i++) {\n\t\tif (matrix[1][i] === 1) {\n\t\t\talert(\"Game Over\");\n\t\t\tdetachEvents();\n\t\t\tplay = false;\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n// checks if the last row is full\nfunction checkForFullRow() {\n\tvar full = true;\n\tfor (var i = minColl; i <= maxColl; i++) {\n\t\tif (matrix[maxRow][i] !== 1) full = false;\n\t}\n\tif (full) {\n\t\tclearLastRow();\n\t\trepositionBlocks();\n\t}\n}\n\n// clears the last row\n// triggered if the last row is full\nfunction clearLastRow() {\n\t//clear matrix last row\n\tfor (var i = minColl; i <= maxColl; i++) {\n\t\tmatrix[maxRow][i] = 0;\n\t}\n\t//clear DOM table last row\n\tvar theLastRow = document.getElementsByClassName('rows')[maxRow - 1];\n\tfor (var j = minColl - 1; j < maxColl; j++) {\n\t\tvar td = theLastRow.children[j];\n\t\ttd.removeChild(td.children[0]);\n\t}\n}\n\n// reposition all the blocks with one position lower after clearing the last row\nfunction repositionBlocks() {\n\tvar sourceRow, destRow, sourceColl, destColl;\n\tfor (var i = maxRow - 2; i >= 1; i--) {\n\t\tsourceRow = document.getElementsByClassName('rows')[i];\n\t\tdestRow = document.getElementsByClassName('rows')[i + 1];\n\t\tfor (var j = minColl - 1; j < maxColl; j++) {\n\t\t\tsourceColl = sourceRow.children[j];\n\t\t\tif (sourceColl.children.length > 0) {\n\t\t\t\t// modify the matrix\n\t\t\t\tmatrix[i + 2][j + 1] = 1;\n\t\t\t\t// append the block from the upper element to the one positioned lower\n\t\t\t\tdestColl = destRow.children[j];\n\t\t\t\tdestColl.appendChild(sourceColl.children[0]);\n\t\t\t\t// modify the matrix\n\t\t\t\tmatrix[i + 1][j + 1] = 0;\n\t\t\t} else {\n\t\t\t\t// modify the matrix\n\t\t\t\tmatrix[i + 2][j + 1] = 0;\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction randomNumber(minVal, maxVal) {\n\treturn Math.round(Math.random() * (maxVal - minVal + 1) + minVal);\n}\n\nfunction detachEvents() {\n\tdocument.getElementById('start').removeEventListener('click', start);\n\tdocument.getElementById('stop').removeEventListener('click', stop);\n\tdocument.removeEventListener('keydown', changeDirection);\n}\n//# sourceMappingURL=script.js.map\n//# sourceMappingURL=script.js.map\n"],"sourceRoot":"/source/"}