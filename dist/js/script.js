"use strict";function genMatrix(){var e,t;for(e=1;e<=maxRow;e++)for(matrix[e]=[],t=1;t<=maxColl;t++)matrix[e][t]=0}function start(){play=!0,0===matrix.length&&genMatrix(),checkForFullRow(),block=generateBlock(),raiseScore(),showScore(),movingBlock=setInterval(reposition,intervalTime)}function stop(){play=!1,lastY+=1,lowerScore(),deleteLastPosition(),alert("Game stoped!")}function generateBlock(){var e=document.createElement("div");return e.className="active-block",e.style.background=generateBackgroundColor(),startingPoz.appendChild(e),nextAvailableCell=getnextAvailableCell(DIR.down,xAxis.default),setThePositions(startingRow,startingColl,startingRow,startingColl),e}function changeDirection(e){if(e=e||window.event,"37"==e.keyCode){if(verifyVacancy(DIR.left,xAxis.back)){try{moveTo(block,DIR.left,xAxis.back),setThePositions(currentRow,currentColl,nextRow-xAxis.back,nextColl+DIR.left,nextRow,nextColl+DIR.left)}catch(e){console.log(e)}deleteLastPosition()}}else if("39"==e.keyCode){if(verifyVacancy(DIR.right,xAxis.back)){try{moveTo(block,DIR.right,xAxis.back),setThePositions(currentRow,currentColl,nextRow-xAxis.back,nextColl+DIR.right,nextRow,nextColl+DIR.right)}catch(e){console.log(e)}deleteLastPosition()}}else if("40"==e.keyCode&&verifyVacancy(DIR.down,xAxis.default)){try{moveTo(block,DIR.down,xAxis.default),setThePositions(currentRow,currentColl,nextRow-xAxis.default,nextColl+DIR.down)}catch(e){console.log(e)}deleteLastPosition()}}function reposition(){if(play&&isGameOver()===!0)if(verifyVacancy(DIR.down,xAxis.default)){try{moveTo(block,DIR.down,xAxis.default),setThePositions(currentRow,currentColl,nextRow-xAxis.default,nextColl+DIR.down)}catch(e){console.log(e)}deleteLastPosition()}else block.className="positioned-block",matrix[currentRow][currentColl]=1,resetPositions(),clearInterval(movingBlock),start();else clearInterval(movingBlock),play=!0}function verifyVacancy(e,t){return!!(currentRow<maxRow&&currentColl+e>=minColl&&currentColl+e<=maxColl&&isPositionOpen(e,t))}function moveTo(e,t,o){if("undefined"==typeof e||null===e)throw new Error("Block is not defined!");if("undefined"==typeof t||null===t)throw new Error("The direction isn't specified!");"undefined"!=typeof o&&null!==o||(o=0);var l=document.createElement("div");l.className="active-block",l.style.background=block.style.background,matrix[currentRow][currentColl]=2,lastX=currentColl,lastY=currentRow,nextAvailableCell=getnextAvailableCell(t,o),nextAvailableCell.appendChild(l)}function deleteLastPosition(){matrix[lastY][lastX]=0;var e=document.getElementsByClassName("coll-"+lastX)[lastY-1];e.removeChild(e.children[0])}function isPositionOpen(e,t){return 0===matrix[nextRow][nextColl+e]}function setThePositions(e,t,o,l,n,r){e&&t&&null!==e&&null!==t&&(lastRow=e,lastColl=t),o&&l&&null!==o&&null!==l&&(currentRow=o,currentColl=l),n&&r&&null!==n&&null!==r?(nextRow=n,nextColl=r):(nextRow=currentRow+1,nextColl=currentColl)}function getnextAvailableCell(e,t){return"undefined"!=typeof e&&null!==e||(e=0),"undefined"!=typeof t&&null!==t||(t=0),document.getElementsByClassName("coll-"+(nextColl+e))[nextRow-t-1]}function generateBackgroundColor(){var e,t=randomNumber(0,4);return e=colors[t]}function resetPositions(){currentRow=startingRow,currentColl=startingColl,lastRow=startingRow,lastColl=startingColl,nextRow=startingRow+1,nextColl=startingColl}function isGameOver(){for(var e=minColl;e<=maxColl;e++)if(1===matrix[1][e])return updateBestScore(),alert("Game Over"),detachEvents(),play=!1,!1;return!0}function checkForFullRow(){for(var e=!0,t=minColl;t<=maxColl;t++)1!==matrix[maxRow][t]&&(e=!1);e&&(clearLastRow(),repositionBlocks())}function clearLastRow(){for(var e=minColl;e<=maxColl;e++)matrix[maxRow][e]=0;for(var t=document.getElementsByClassName("rows")[maxRow-1],o=minColl-1;o<maxColl;o++){var l=t.children[o];l.removeChild(l.children[0])}}function repositionBlocks(){for(var e,t,o,l,n=maxRow-2;n>=1;n--){e=document.getElementsByClassName("rows")[n],t=document.getElementsByClassName("rows")[n+1];for(var r=minColl-1;r<maxColl;r++)o=e.children[r],o.children.length>0?(matrix[n+2][r+1]=1,l=t.children[r],l.appendChild(o.children[0]),matrix[n+1][r+1]=0):matrix[n+2][r+1]=0}}function raiseScore(){score+=1}function lowerScore(){score-=1}function updateBestScore(){if("undefined"!=typeof Storage){var e=(document.getElementsByClassName("score__best")[0],parseInt(localStorage.bestScore));!isNaN(e)&&score>e&&(localStorage.bestScore=score,alert("New Record:"+score+" points!"))}else alert("Your browser doesn't support Web Storage.")}function showScore(){var e=document.getElementsByClassName("score__current")[0],t=document.getElementsByClassName("score__best")[0];e.innerHTML="Score:"+score,localStorage.bestScore||(localStorage.bestScore=0),t.innerHTML="Best Score:"+localStorage.bestScore}function randomNumber(e,t){return Math.floor(Math.random()*(t-e+1)+e)}function detachEvents(){document.getElementById("start").removeEventListener("click",start),document.getElementById("stop").removeEventListener("click",stop),document.removeEventListener("keydown",changeDirection)}!function(){var e=document.getElementById("start");e.addEventListener("click",start);var t=document.getElementById("stop");t.addEventListener("click",stop),document.addEventListener("keydown",changeDirection),genMatrix()}();var play=!0,DIR={left:-1,down:0,right:1},xAxis={back:1,default:0},intervalTime=800,block,movingBlock,startingRow=1,startingColl=6,currentRow=1,currentColl=6,lastRow=1,lastColl=6,nextRow=2,nextColl=6,lastX=6,lastY=1,startingPoz=document.getElementsByClassName("coll-"+startingColl)[0],lastPoz,nextAvailableCell,lastOccupiedCell,maxRow=15,maxColl=10,minColl=1,matrix=[],score=0,colors=["#be0000","#becf00","#2cbe00","#001ebe","#be009a"];
//# sourceMappingURL=data:application/json;base64,
